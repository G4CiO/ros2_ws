<?xml version="1.0"?>
<robot name="wrg_bot" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:include filename="common_properties.xacro" />

    <!-- create variable by xacro -->
    <xacro:property name="base_radius" value="0.1" />
    <xacro:property name="base_length" value="0.109" />
    <xacro:property name="wheel_radius" value="0.033" />
    <xacro:property name="wheel_length" value="0.0178" />
    <xacro:property name="caster_length" value="0.015" />
    <xacro:property name="caster_width" value="0.015" />
    <xacro:property name="caster_height" value="0.016" />
    <xacro:property name="lidar_length" value="0.063" />
    <xacro:property name="lidar_width" value="0.05399" />
    <xacro:property name="lidar_height" value="0.0485" />

    <link name="base_footprint" />
    
    <!-- create base link(rigit part) -->
    <link name="base_link">
        <visual>
            <origin xyz="${-base_radius} ${-base_radius+0.0089} 0" rpy="${pi / 2} 0 ${pi / 2}"/>
            <geometry>
                <!-- <mesh filename="package://my_robot_description/meshes/base.STL" scale="0.001 0.001 0.001"/> -->
                <mesh filename="$(find my_robot_description)/meshes/base.STL" scale="0.001 0.001 0.001"/>
            </geometry>
            <material name="blue" />
        </visual>

        <collision>
            <origin xyz="0 0 ${base_length/2}" rpy="0 0 0"/>
            <geometry>
                <!-- <box size="${base_length} ${base_width} ${base_height}" />  -->
                <cylinder radius="${base_radius}" length="${base_length}" />
            </geometry>
        </collision>

        <xacro:cylinder_inertia m="0.04" r="${2*base_radius}" l="${2*base_length}" 
                                    xyz="0 0 ${base_length/2}" rpy="0 0 0" />

    </link>

    <!-- create function for wheel link -->
    <xacro:macro name="wheel_link" params="prefix"> 
        <link name="${prefix}_wheel_link">
            <visual>
                <geometry>
                    <!-- <mesh filename="package://my_robot_description/meshes/wheel.STL" scale="0.001 0.001 0.001"/> -->
                    <mesh filename="$(find my_robot_description)/meshes/wheel.STL" scale="0.001 0.001 0.001"/>
                </geometry>
                <origin xyz="${wheel_radius} ${-wheel_length/2} ${-wheel_radius}" rpy="0 0 ${pi / 2}" /> <!-- use pi by xacro -->
                <material name="grey" />
            </visual>

            <collision>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_length}" />
                </geometry>
                <origin xyz="0 0 0" rpy="${pi / 2} 0 0" /> <!-- use pi by xacro -->
            </collision>

            <xacro:cylinder_inertia m="0.04" r="${2*wheel_radius}" l="${2*wheel_length}" 
                                    xyz="0 0 0" rpy="${pi / 2} 0 0" />

        </link>
    </xacro:macro>

    <!-- use function wheel link -->
    <xacro:wheel_link prefix="right"/>
    <xacro:wheel_link prefix="left"/>

    <!-- create caster wheel link(rigit part) -->
    <xacro:macro name="caster_wheel_link" params="prefix"> 
        <link name="${prefix}_caster_wheel_link">
            <visual>
                <geometry>
                    <!-- <mesh filename="package://my_robot_description/meshes/caster_wheel.STL" scale="0.001 0.001 0.001"/> -->
                    <mesh filename="$(find my_robot_description)/meshes/caster_wheel.STL" scale="0.001 0.001 0.001"/>
                </geometry>
                <origin xyz="${- caster_length / 2} ${(- caster_width / 2) - 0.004} 0" rpy="${pi} 0 ${pi / 2}" /> 
                <material name="grey" />
            </visual>

            <collision>
                <geometry>
                    <box size="${caster_length} ${caster_width} ${caster_height}" /> <!-- use variable -->
                </geometry>
                <origin xyz="0 0 ${-caster_height/2}" rpy="0 0 0" /> 
            </collision>

            <xacro:box_inertia m="0.02" l="${2*caster_length}" w="${2*caster_width}" h="${2*caster_height}" 
                            xyz="0 0 ${-caster_height/2}" rpy="0 0 0" />

        </link>
    </xacro:macro>

    <xacro:caster_wheel_link prefix="front"/>
    <xacro:caster_wheel_link prefix="back"/>

    <link name="lidar_link">
        <visual>
            <origin xyz="${(-lidar_length / 2) - 0.025} ${(-lidar_width / 2)-0.005} ${(-lidar_height/2)-0.01}" rpy="${pi/2} 0 ${pi/2}"/>
            <geometry>
                <!-- <mesh filename="package://my_robot_description/meshes/ld06.STL" scale="0.001 0.001 0.001"/> -->
                <mesh filename="$(find my_robot_description)/meshes/ld06.STL" scale="0.001 0.001 0.001"/>
            </geometry>
            <material name="grey" />
        </visual>

        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${lidar_length} ${lidar_width} ${lidar_height}" /> <!-- use variable -->
            </geometry>
        </collision>

        <xacro:box_inertia m="5.0" l="${2*lidar_length}" w="${2*lidar_width}" h="${2*lidar_height}" 
                           xyz="0 0 0" rpy="0 0 0" />

    </link>

<!-- ////////////////////////////////////////////////////////////////// -->

    <!-- create base joint -->
    <joint name="base_joint" type="fixed">
        <parent link="base_footprint" /> 
        <child link="base_link" />
        <origin xyz="0 0 ${(caster_height-0.006)}" rpy="0 0 0" />
    </joint>

    <!-- create base right wheel joint -->
    <joint name="base_right_wheel_joint" type="continuous">
        <parent link="base_link" /> 
        <child link="right_wheel_link" />
        <origin xyz="0 ${(-((base_radius*2) + wheel_length) / 2.0) + 0.02617 + 0.0089} 0.02297" rpy="0 0 0" /> <!-- -base_length / 4.0 = -0.15 -->
        <axis xyz="0 1 0" />
    </joint>

    <!-- create base left wheel joint -->
    <joint name="base_left_wheel_joint" type="continuous">
        <parent link="base_link" /> 
        <child link="left_wheel_link" />
        <origin xyz="0 ${(((base_radius*2) + wheel_length) / 2.0) - 0.02617 - 0.018 + 0.0089} 0.02297" rpy="0 0 0" /> 
        <axis xyz="0 1 0" />
    </joint>

    <!-- create base front caster wheel joint -->
    <joint name="base_front_caster_wheel_joint" type="fixed">
        <parent link="base_link" /> 
        <child link="front_caster_wheel_link" />
        <origin xyz="0.07 0 0.006" rpy="0 0 0" /> <!-- -base_length / 2.0 = 0.2 -->
    </joint>

    <!-- create base back caster wheel joint -->
    <joint name="base_back_caster_wheel_joint" type="fixed">
        <parent link="base_link" /> 
        <child link="back_caster_wheel_link" />
        <origin xyz="-0.07 0 0.006" rpy="0 0 0" /> <!-- -base_length / 2.0 = 0.2 -->
    </joint>

    <!-- create lidar joint -->
    <joint name="lidar_joint" type="fixed">
        <parent link="base_link" /> 
        <child link="lidar_link" />
        <origin xyz="0 0 ${(base_length - 0.01) + 0.01 + (lidar_height/2)} " rpy="0 0 0" />
    </joint>

    <xacro:include filename="wrg_bot_gazebo.xacro" />

</robot>